{"version":3,"sources":["hextile.js","App.js","serviceWorker.js","index.js"],"names":["makePolygon","verts","props","strokeColor","path_data","i","length","toFixed","fill","fillStyle","stroke","stroke-width","strokeWidth","d","makeArc","center","innerRadius","outerRadius","startAngle","endAngle","pt1","Math","cos","sin","pt2","pt3","pt4","fill_data","edge_data","makeStraight","start_pt","end_pt","width","dx","dy","scale","sqrt","n","makeTile","index","r","borderProps","ribbonProps","c","s","corners","r1","r2","PI","makeTile0","makeTile1","makeTile2","makeTile3","centers","makeTile4","App","state","s_real","s_imag","primeProps","radius","pathFillProps","e","keyCode","this","setState","prevState","newScale","min","max","mat","target","getScreenCTM","inverse","sx","round","clientX","a","sy","clientY","f","placement_points","xoff","yoff","points","j","y","lim","abs","x","push","generate_placement_points","tiles","w","box","class","xmlns","height","h","viewBox","onKeyDown","keydown","bind","onClick","onclick","tabIndex","map","pt","floor","random","xfm","transform","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.60c8213a.chunk.js","sourcesContent":["import React from 'react';\n\n// Creates a polygon connecting the supplied vertices.\n//\n// verts - The corners of the polygon. An array of 2-element arrays.\n// props - An object with values for fill, stroke, & stroke-width\n//\nfunction makePolygon(verts, props) {\n\n    if (props.strokeColor == 'none') {\n        return <></>\n    } else {\n        // generate path data from vertices\n        let path_data = '';\n        for (let i=0; i<verts.length; i++) {\n            path_data += (i===0?' M':' L');\n            path_data += ' ' + verts[i][0].toFixed(2) + ' '+ verts[i][1].toFixed(2);\n        };\n        path_data += ' Z';\n\n        // return path\n        return <path fill={props.fillStyle}\n                 stroke={props.strokeColor}\n                     stroke-width={props.strokeWidth}\n                     d={path_data} />\n    }\n}\n\n// Creates a wide arc with the specified center. Takes 2 radii. The innerRadius\n// should be positive, but smaller than outerRadius.\n//\n// Actually creates 2 paths. The first is filled with no outline. Then it creates\n// another that just draws the border. The reason for this is that it only wants the\n// borders on the round sides, not across the ends.\n//\n// center - A 2-element array with the X & Y coordinates of the center\n// innerRadius - The radius of the inside of the arc\n// outerRadius - The radius of the outside of the arc\n// startAngle - Angle in radians of the start of the arc\n// endAngle - Angle in radians of the end of the arc\n// props - An object with values for fill, stroke, & stroke-width\n//\nfunction makeArc(center, innerRadius, outerRadius, startAngle, endAngle, props) {\n\n    const pt1 = [(center[0] + outerRadius*Math.cos(startAngle)).toFixed(2),\n                 (center[1] + outerRadius*Math.sin(startAngle)).toFixed(2)];\n    const pt2 = [(center[0] + outerRadius*Math.cos(endAngle)).toFixed(2),\n                 (center[1] + outerRadius*Math.sin(endAngle)).toFixed(2)];\n    const pt3 = [(center[0] + innerRadius*Math.cos(endAngle)).toFixed(2),\n                 (center[1] + innerRadius*Math.sin(endAngle)).toFixed(2)];\n    const pt4 = [(center[0] + innerRadius*Math.cos(startAngle)).toFixed(2),\n                 (center[1] + innerRadius*Math.sin(startAngle)).toFixed(2)];\n\n    let fill_data = '';\n    fill_data += ' M ' + pt1[0] + ' ' + pt1[1];\n    fill_data += ' A ' + outerRadius + ' ' + outerRadius\n        + ' ' + 0 + ' ' + 0 + ' ' + 1\n        + ' ' + pt2[0] + ' ' + pt2[1];\n    fill_data += ' L ' + pt3[0] + ' ' + pt3[1];\n    fill_data += ' A ' + innerRadius + ' ' + innerRadius\n        + ' ' + 0 + ' ' + 0 + ' ' + 0\n        + ' ' + pt4[0] + ' ' + pt4[1];\n    fill_data += ' Z';\n\n    let edge_data = '';\n    edge_data += ' M ' + pt1[0] + ' ' + pt1[1];\n    edge_data += ' A ' + outerRadius + ' ' + outerRadius\n        + ' ' + 0 + ' ' + 0 + ' ' + 1\n        + ' ' + pt2[0] + ' ' + pt2[1];\n    edge_data += ' M ' + pt3[0] + ' ' + pt3[1];\n    edge_data += ' A ' + innerRadius + ' ' + innerRadius\n        + ' ' + 0 + ' ' + 0 + ' ' + 0\n        + ' ' + pt4[0] + ' ' + pt4[1];\n\n    return <>\n               <path fill={props.fillStyle}\n                     stroke=\"none\"\n                     stroke-width=\"0\"\n                     d={fill_data} />\n               <path fill=\"none\"\n                     stroke={props.strokeColor}\n                     stroke-width={props.strokeWidth}\n                     d={edge_data} />\n           </>\n}\n\n// Creates a wide line between 2 points.\n//\n// Actually creates 2 paths. The first is filled with no outline. Then it creates\n// another that just draws the border. The reason for this is that it only wants the\n// borders on the long sides, not across the ends.\n//\n// start_pt - A 2-element array with the X & Y coordinates of the start point\n// end_pt - A 2-element array with the X & Y coordinates of the end point\n// width - The width of the line\n// props - An object with values for fill, stroke, & stroke-width\n//\nfunction makeStraight(start_pt, end_pt, width, props) {\n    const dx = end_pt[0] - start_pt[0];\n    const dy = end_pt[1] - start_pt[1];\n    const scale = width / Math.sqrt(dx*dx + dy*dy);\n    const n = [-dy*scale, dx*scale];\n    const pt1 = [(start_pt[0] + n[0]).toFixed(2), (start_pt[1] + n[1]).toFixed(2)];\n    const pt2 = [(  end_pt[0] + n[0]).toFixed(2), (  end_pt[1] + n[1]).toFixed(2)];\n    const pt3 = [(  end_pt[0] - n[0]).toFixed(2), (  end_pt[1] - n[1]).toFixed(2)];\n    const pt4 = [(start_pt[0] - n[0]).toFixed(2), (start_pt[1] - n[1]).toFixed(2)];\n\n    let fill_data = '';\n    fill_data += ' M ' + pt1[0] + ' ' + pt1[1]\n        + ' L ' + pt2[0] + ' ' + pt2[1]\n        + ' L ' + pt3[0] + ' ' + pt3[1]\n        + ' L ' + pt4[0] + ' ' + pt4[1]\n        + ' Z ';\n    let edge_data = '';\n    edge_data = ' M ' + pt1[0] + ' ' + pt1[1]\n        + ' L ' + pt2[0] + ' ' + pt2[1]\n        + ' M ' + pt3[0] + ' ' + pt3[1]\n        + ' L ' + pt4[0] + ' ' + pt4[1];\n    return <>\n               <path fill={props.fillStyle}\n                     stroke=\"none\"\n                     stroke-width=\"0\"\n                     d={fill_data} />\n               <path fill=\"none\"\n                     stroke={props.strokeColor}\n                     stroke-width={props.strokeWidth}\n                     d={edge_data} />\n           </>\n}\n\n// Tile 0 has 3 arcs which connect neighboring sides\nfunction makeTile0(corners, r, borderProps, ribbonProps) {\n    const r1 = r / 3;\n    const r2 = r * 2 / 3;\n    return <>\n               { makeArc(corners[0], r1, r2,  Math.PI/6, 5*Math.PI/6, ribbonProps) }\n               { makeArc(corners[2], r1, r2,5*Math.PI/6, 9*Math.PI/6, ribbonProps) }\n               { makeArc(corners[4], r1, r2,9*Math.PI/6,13*Math.PI/6, ribbonProps) }\n               { makePolygon(corners, borderProps) }\n           </>\n}\n\n// Tile 1 has straight which goes directly across, and 2 arcs which connect the\n// neighboring sides on each side of that straight.\nfunction makeTile1(corners, r, borderProps, ribbonProps) {\n    const r1 = r / 3;\n    const r2 = r * 2 / 3;\n    const start_pt = [(corners[1][0]+corners[2][0])/2,\n                      (corners[1][1]+corners[2][1])/2];\n    const end_pt = [(corners[4][0]+corners[5][0])/2,\n                    (corners[4][1]+corners[5][1])/2];\n    return <>\n               { makeArc(corners[0], r1, r2,   Math.PI/6, 5*Math.PI/6, ribbonProps) }\n               { makeArc(corners[3], r1, r2,-5*Math.PI/6, -Math.PI/6, ribbonProps) }\n               { makeStraight(start_pt, end_pt, r/6, ribbonProps) }\n               { makePolygon(corners, borderProps) }\n           </>\n}\n\n// Tile 2 has 1 arc which connects a pair of neighboring sides and 2 longer arcs\n// which cross each other to connect pairs of the other 4 sides.\nfunction makeTile2(corners, r, borderProps, ribbonProps) {\n    const r1 = r / 3;\n    const r2 = r * 2 / 3;\n    const dx = corners[0][0] - corners[5][0];\n    const dy = corners[0][1] - corners[5][1];\n    const pt1 = [corners[0][0] + dx, corners[0][1] + dy];\n    const pt2 = [corners[0][0] - dx, corners[0][1] + dy];\n    return <>\n               { makeArc(pt1, r+r1, r+r2,  3*Math.PI/6, 5*Math.PI/6, ribbonProps) }\n               { makeArc(pt2, r+r1, r+r2,  1*Math.PI/6, 3*Math.PI/6, ribbonProps) }\n               { makeArc(corners[3], r1, r2,-5*Math.PI/6, -Math.PI/6, ribbonProps) }\n               { makePolygon(corners, borderProps) }\n           </>\n}\n\n// Tile 3 has 1 straight which goes directly across, and 2 long arcs which cross that\n// to connect non-adjacent sides.\nfunction makeTile3(corners, r, borderProps, ribbonProps) {\n    const r1 = r / 3;\n    const r2 = r * 2 / 3;\n    const dx = corners[0][0] - corners[5][0];\n    const dy = corners[0][1] - corners[5][1];\n    const pt1 = [corners[0][0] + dx, corners[0][1] + dy];\n    const pt2 = [corners[3][0] - dx, corners[3][1] - dy];\n    const start_pt = [(corners[0][0]+corners[1][0])/2,\n                      (corners[0][1]+corners[1][1])/2];\n    const end_pt = [(corners[3][0]+corners[4][0])/2,\n                    (corners[3][1]+corners[4][1])/2];\n    return <>\n               { makeArc(pt1, r+r1, r+r2,  3*Math.PI/6, 5*Math.PI/6, ribbonProps) }\n               { makeStraight(start_pt, end_pt, r/6, ribbonProps) }\n               { makeArc(pt2, r+r1, r+r2, -3*Math.PI/6, -1*Math.PI/6, ribbonProps) }\n               { makePolygon(corners, borderProps) }\n           </>\n}\n\n// Tile 4 has 3 straights which each connect opposite sides. They all cross in\n// the center.\nfunction makeTile4(corners, r, borderProps, ribbonProps) {\n    const centers = [[(corners[0][0]+corners[1][0])/2,\n                      (corners[0][1]+corners[1][1])/2],\n                     [(corners[1][0]+corners[2][0])/2,\n                      (corners[1][1]+corners[2][1])/2],\n                     [(corners[2][0]+corners[3][0])/2,\n                      (corners[2][1]+corners[3][1])/2],\n                     [(corners[3][0]+corners[4][0])/2,\n                      (corners[3][1]+corners[4][1])/2],\n                     [(corners[4][0]+corners[5][0])/2,\n                      (corners[4][1]+corners[5][1])/2],\n                     [(corners[5][0]+corners[0][0])/2,\n                      (corners[5][1]+corners[0][1])/2]];\n    return <>\n               { makeStraight(centers[0], centers[3], r/6, ribbonProps) }\n               { makeStraight(centers[1], centers[4], r/6, ribbonProps) }\n               { makeStraight(centers[2], centers[5], r/6, ribbonProps) }\n               { makePolygon(corners, borderProps) }\n           </>\n}\n\n// Return an SVG object that draws the specified tile\n// index - Which tile (0-4)\n// r - Radius\n// borderProps - Properties for the outer border\n// ribbonProp - Properties for the ribbons\nfunction makeTile(index, r, borderProps, ribbonProps) {\n    const c = r * Math.sqrt(3)/2;\n    const s = r/2;\n    const corners = [[0, -r],\n                     [c, -s],\n                     [c, s],\n                     [0, r],\n                     [-c, s],\n                     [-c,-s]];\n    switch (index) {\n    case 0:\n        return makeTile0(corners, r, borderProps, ribbonProps);\n    case 1:\n        return makeTile1(corners, r, borderProps, ribbonProps);\n    case 2:\n        return makeTile2(corners, r, borderProps, ribbonProps);\n    case 3:\n        return makeTile3(corners, r, borderProps, ribbonProps);\n    case 4:\n    default:\n        return makeTile4(corners, r, borderProps, ribbonProps);\n    }\n}\n\nexport {makeTile};\n","import React from 'react';\nimport './App.css';\nimport {makeTile} from './hextile.js';\n\n// Generate placement points for tiles\nfunction generate_placement_points(r, n) {\n    const xoff = r * Math.sqrt(3);\n    const yoff = 1.5 * r;\n\n    let points = [];\n    for (let j=-n; j<=n; j++) {\n        const y = j*yoff;\n        const lim = 2*n-Math.abs(j);\n        for (let i=-lim; i<=lim; i+=2) {\n            const x = i*xoff/2;\n            points.push([x, y]);\n        }\n    }\n    return points;\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            s_real: 7,\n            s_imag: -8,\n            scale: 12,\n        };\n\n        this.primeProps = {\n            radius: 5,\n            fillStyle: \"magenta\",\n            strokeColor: \"none\"\n        };\n\n        this.pathFillProps = {\n            fillStyle: \"none\",\n            strokeColor: \"grey\",\n            strokeWidth: \"3\"\n        };\n\n    }\n\n    keydown(e) {\n        switch (e.keyCode) {\n        case 187:\n            this.setState((prevState) => {\n                const newScale = Math.min(22, prevState.scale+1);\n                return {\n                    s_real: prevState.s_real,\n                    s_imag: prevState.s_imag,\n                    scale: newScale\n                }\n            });\n            break;\n        case 189:\n            this.setState((prevState) => {\n                const newScale = Math.max(4, prevState.scale-1);\n                return {\n                    s_real: prevState.s_real,\n                    s_imag: prevState.s_imag,\n                    scale: newScale\n                }\n            });\n            break;\n        default:\n            break;\n        }\n    }\n\n    onclick(e) {\n        const mat = e.target.getScreenCTM().inverse();\n        const sx = Math.round((e.clientX * mat.a + mat.e) / this.state.scale);\n        const sy = -Math.round((e.clientY * mat.d + mat.f) / this.state.scale);\n        this.setState((prevState) => {\n            return {s_real: sx,\n                    s_imag: sy,\n                    scale: prevState.scale\n                   }\n        });\n    }\n\n    render() {\n        const r = 52;\n\n// show borders\n//        const borderProps = {\n//            fillStyle: \"none\",\n//            strokeColor: \"#DA6\",\n//            strokeWidth: \"4\"\n//        };\n\n// don't show borders\n        const borderProps = {\n            fillStyle: \"none\",\n            strokeColor: \"none\",\n            strokeWidth: \"0\"\n        };\n\n        const ribbonProps = {\n            fillStyle: \"#FE9\",\n            strokeColor: \"#8A2\",\n            strokeWidth: \"5\"\n        };\n\n        const placement_points = generate_placement_points(r, 5);\n        const tiles = [[0, 0], [0, 60],\n                       [1, 0], [1, 60], [1, 120],\n                       [2, 0], [2, 60], [2, 120], [2, 180], [2, 240], [2, 300],\n                       [3, 0], [3, 60], [3, 120],\n                       [4, 0]];\n\n        const placeTiles = (pts) => pts.map((pt) => {\n            const index = Math.floor(Math.random() * Math.floor(tiles.length));\n\n            const xfm = \"translate(\" + pt[0].toFixed(2) + \" \" + pt[1].toFixed(2) + \") rotate(\" + tiles[index][1] + \")\";\n            return <g transform={xfm}>\n                       {makeTile(tiles[index][0], r, borderProps, ribbonProps) }\n                   </g>\n        });\n\n        const w = 1000;\n        const h = 960;\n        const box = [-w/2, -h/2, w, h];\n        return (\n            <div class=\"wrapper\">\n                <h2>Hex Tiles</h2>\n                <svg xmlns=\"http://www.w3.org/2000/svg\"\n                     width={w/2}\n                     height={h/2}\n                     viewBox={box}\n                     onKeyDown={this.keydown.bind(this)}\n                     onClick={ this.onclick.bind(this)}\n                     tabIndex=\"1\"\n                >\n                    <> {placeTiles(placement_points)} </>\n            </svg>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}